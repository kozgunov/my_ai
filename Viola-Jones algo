import cv2


def face_capture():

    left_eye_cascade = cv2.CascadeClassifier('haarcascade_lefteye_2splits.xml')
    right_eye_cascade = cv2.CascadeClassifier('haarcascade_righteye_2splits.xml')
    smile_cascade = cv2.CascadeClassifier('haarcascade_smile.xml')
    eyes_cascade = cv2.CascadeClassifier('haarcascade_eye.xml')
    face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

    #  camera = cv2.VideoCapture("Koijot.mp4 ")  # downloaded video
    camera = cv2.VideoCapture(0)  # computer camera

    cv2.namedWindow("computer camera online")
    img_counter = 0

    while True:

        ret, frame = camera.read()
        gray = cv2.cvtColor(frame, cv2.IMREAD_COLOR)  # or cv2.COLOR_BGR2GRAY as option
        if not ret:
            print("failed to grab frame")
            break

        faces = face_cascade.detectMultiScale(gray, scaleFactor=1.05, minNeighbors=4, minSize=(30, 30), flags=cv2.CASCADE_SCALE_IMAGE)

        for (x, y, w, h) in faces:
            cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2) # face

            restriction_of_eyes_gray = gray[x: x + w, y:y + h]
            restriction_of_eyes_gray_color = frame[x: x + w, y:y + h]
            #right_eye = right_eye_cascade.detectMultiScale(restriction_of_eyes_gray, scaleFactor=1.01, minNeighbors=2, minSize=(3,3), flags=cv2.CASCADE_SCALE_IMAGE)
            #left_eye = left_eye_cascade.detectMultiScale(restriction_of_eyes_gray, scaleFactor=1.01, minNeighbors=2, minSize=(3,3), flags=cv2.CASCADE_SCALE_IMAGE)
            eyes = eyes_cascade.detectMultiScale(restriction_of_eyes_gray, scaleFactor=1.01, minNeighbors=2, minSize=(3,3), flags=cv2.CASCADE_SCALE_IMAGE)
            for (ex, ey, ew, eh) in eyes:
                cv2.rectangle(restriction_of_eyes_gray_color, (ex, ey), (ex + ew, ey + eh), (200, 200, 0), 2)
            #for (rex, rey, rew, reh) in right_eye:
            #    cv2.rectangle(restriction_of_eyes_gray_color, (rex, rey), (rex + rew, rey + reh), (200, 200, 0), 2)
            #for (lex, ley, lew, leh) in left_eye:
            #    cv2.rectangle(restriction_of_eyes_gray_color, (lex, ley), (lex + lew, ley + leh), (200, 0, 200), 2)

        cv2.imshow('computer camera online', frame)


        k = cv2.waitKey(1)

        if k == 27:  # ESC pressed
            print("Escape hit, closing...")
            break
        elif k == 32:  # SPACE pressed
            img_name = "opencv_frame_{}.png".format(img_counter)
            cv2.imwrite(img_name, frame)
            print("{} written!".format(img_name))
            img_counter += 1

    camera.release()
    #cv2.destroyALLWIndows()


def main():
    face_capture()


main()




# smile
# nose
# left and right eyes
# ears
# position of left and right eyes and nose between them
# eyebrows
# rotation of face
# distances between eyes, eyebrows
# skin detecting
# full face inside the rectangle
# ?? what to do with small sizes ??
# no more, no less than 1 nose, 1 smile, 1 left eye, 1 right eye, 1,right ear, 1 left ear, 1 left eyebrow, 1 right eyebrow
# на чем нужно будет сосредаточиться в ближайшее время?
